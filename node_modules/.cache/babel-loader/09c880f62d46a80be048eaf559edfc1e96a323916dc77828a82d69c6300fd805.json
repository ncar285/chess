{"ast":null,"code":"// CONSTANTS \n\n// ACTION CREATORS\n\n// SELECTORS\n\n// THUNK ACTION CREATORS\n\nexport const fetchUserNutritionByDay = selectedDate => async dispatch => {\n  try {\n    const res = await jwtFetch(`/api/nutrition/day?date=${selectedDate}`);\n    const dailyNutrition = await res.json();\n    dispatch(receiveUserNutrition({\n      nutrition: dailyNutrition\n    }));\n  } catch (err) {\n    const res = await err.json();\n    return dispatch(receiveErrors(res.errors));\n  }\n};\nexport const addWeightByDate = (weight, date) => async dispatch => {\n  try {\n    const res = await jwtFetch(`/api/users/weight`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        weight,\n        date\n      })\n    });\n    if (res.ok) {\n      dispatch(receiveWeightByDate(weight, date));\n    } else {\n      const errorData = await res.json();\n      return dispatch(receiveErrors(errorData.errors));\n    }\n  } catch (err) {\n    const res = await err.json();\n    return dispatch(receiveErrors(res.errors));\n  }\n};\n\n// REDUCER\n\nconst initialState = {\n  nutritionItems: {},\n  workouts: [],\n  healthData: {},\n  mealPlan: {},\n  weightByDate: {}\n};\nconst usersReducer = (state = initialState, action) => {\n  var _action$currentUser, _action$currentUser2, _action$currentUser3, _action$currentUser4;\n  const nextState = {\n    ...state\n  };\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n      nextState.nutritionItems = (_action$currentUser = action.currentUser) !== null && _action$currentUser !== void 0 && _action$currentUser.nutritionData ? action.currentUser.nutritionData : {};\n      nextState.healthData = (_action$currentUser2 = action.currentUser) !== null && _action$currentUser2 !== void 0 && _action$currentUser2.healthData ? action.currentUser.healthData : {};\n      nextState.workouts = ((_action$currentUser3 = action.currentUser) === null || _action$currentUser3 === void 0 ? void 0 : _action$currentUser3.workouts) || [];\n      nextState.weightByDate = ((_action$currentUser4 = action.currentUser) === null || _action$currentUser4 === void 0 ? void 0 : _action$currentUser4.weightByDate) || {};\n      return nextState;\n    case RECEIVE_USER_NUTRITION:\n      nextState.nutritionItems = action.userNutrition.nutrition;\n      return nextState;\n    case REMOVE_USER_NUTRITION:\n      return {\n        ...state,\n        nutritionItems: state.nutritionItems.filter(item => item._id !== action.userNutritionId)\n      };\n    case RECEIVE_USER_HEALTH:\n      return {\n        ...state,\n        healthData: action.healthData\n      };\n    case RECEIVE_MEAL_PLAN:\n      return {\n        ...state,\n        mealPlan: action.mealPlan\n      };\n    case RECEIVE_WORKOUT:\n      const newWorkout = action.workout.workouts[action.workout.workouts.length - 1];\n      nextState.workouts.push(newWorkout);\n      return nextState;\n    case RECEIVE_WORKOUTS:\n      nextState.workouts = action.workouts;\n      return nextState;\n    case RECEIVE_WEIGHT_BY_DATE:\n      nextState.weightByDate[action.date] = action.weight;\n      return nextState;\n    case RECEIVE_USER_LOGOUT:\n      return initialState;\n    default:\n      return state;\n  }\n};\nexport default usersReducer;","map":{"version":3,"names":["fetchUserNutritionByDay","selectedDate","dispatch","res","jwtFetch","dailyNutrition","json","receiveUserNutrition","nutrition","err","receiveErrors","errors","addWeightByDate","weight","date","method","body","JSON","stringify","ok","receiveWeightByDate","errorData","initialState","nutritionItems","workouts","healthData","mealPlan","weightByDate","usersReducer","state","action","_action$currentUser","_action$currentUser2","_action$currentUser3","_action$currentUser4","nextState","type","RECEIVE_CURRENT_USER","currentUser","nutritionData","RECEIVE_USER_NUTRITION","userNutrition","REMOVE_USER_NUTRITION","filter","item","_id","userNutritionId","RECEIVE_USER_HEALTH","RECEIVE_MEAL_PLAN","RECEIVE_WORKOUT","newWorkout","workout","length","push","RECEIVE_WORKOUTS","RECEIVE_WEIGHT_BY_DATE","RECEIVE_USER_LOGOUT"],"sources":["/Users/apple/Documents/test/frontend/src/store/users.jsx"],"sourcesContent":["\n// CONSTANTS \n\n\n\n// ACTION CREATORS\n\n\n\n// SELECTORS\n\n\n\n// THUNK ACTION CREATORS\n\n\nexport const fetchUserNutritionByDay = selectedDate => async dispatch => {\n    try {\n        const res = await jwtFetch(`/api/nutrition/day?date=${selectedDate}`);\n        const dailyNutrition = await res.json();\n        dispatch(receiveUserNutrition({nutrition: dailyNutrition}));\n    } catch(err) {\n        const res = await err.json();\n        return dispatch(receiveErrors(res.errors));\n    }\n}\n\nexport const addWeightByDate = (weight, date) => async dispatch => {\n    try {\n        const res = await jwtFetch(`/api/users/weight`, {\n            method: \"POST\",\n            body: JSON.stringify({ weight, date })\n        });\n\n\n        if (res.ok) {\n            dispatch(receiveWeightByDate(weight, date));\n        } else {\n            const errorData = await res.json();\n            return dispatch(receiveErrors(errorData.errors));\n        }\n    } catch(err) {\n        const res = await err.json();\n        return dispatch(receiveErrors(res.errors));\n    }\n}\n\n// REDUCER\n\nconst initialState = {\n    nutritionItems: {},\n    workouts: [],\n    healthData: {},\n    mealPlan: {},\n    weightByDate: {}\n};\n\nconst usersReducer = (state = initialState, action) => {\n    const nextState = { ...state };\n    \n    switch (action.type) {\n        case RECEIVE_CURRENT_USER:\n            nextState.nutritionItems = action.currentUser?.nutritionData ? action.currentUser.nutritionData : {}\n            nextState.healthData = action.currentUser?.healthData ? action.currentUser.healthData : {}\n            nextState.workouts = action.currentUser?.workouts || []\n            nextState.weightByDate = action.currentUser?.weightByDate || {}\n            return nextState\n        case RECEIVE_USER_NUTRITION:\n            nextState.nutritionItems = action.userNutrition.nutrition\n            return nextState;\n        case REMOVE_USER_NUTRITION:\n            return {\n                ...state,\n                nutritionItems: state.nutritionItems.filter(item => item._id !== action.userNutritionId)\n            };\n        case RECEIVE_USER_HEALTH:\n            return { ...state, healthData: action.healthData };\n        case RECEIVE_MEAL_PLAN:\n            return { ...state, mealPlan: action.mealPlan };\n        case RECEIVE_WORKOUT:\n            const newWorkout = action.workout.workouts[action.workout.workouts.length - 1];\n            nextState.workouts.push(newWorkout);\n            return nextState\n        case RECEIVE_WORKOUTS:\n            nextState.workouts = action.workouts;\n            return nextState;\n        case RECEIVE_WEIGHT_BY_DATE:\n            nextState.weightByDate[action.date] = action.weight;\n            return nextState;\n        case RECEIVE_USER_LOGOUT:\n            return initialState;\n        default:\n            return state;\n    }\n};\n\nexport default usersReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}