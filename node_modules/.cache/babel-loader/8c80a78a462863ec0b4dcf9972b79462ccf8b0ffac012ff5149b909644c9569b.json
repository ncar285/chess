{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/test/frontend/src/components/HomePage/HomePage.jsx\";\nimport React, { useState } from 'react';\nimport './HomePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Homepage = () => {\n  // const [chatHistory, setChatHistory] = useState([]);\n\n  // const handleChatSubmit = async (event) => {\n  //     event.preventDefault();\n\n  //     const userMessage = event.target.message.value;\n\n  //     const response = await fetch(\"/chat\", {\n  //         method: \"POST\",\n  //         headers: {\n  //             \"Content-Type\": \"application/json\",\n  //         },\n  //         body: JSON.stringify({ message: userMessage })\n  //     });\n\n  //     const data = await response.json();\n\n  //     setChatHistory(prevHistory => [\n  //         ...prevHistory,\n  //         { type: 'user', text: userMessage },\n  //         { type: 'gpt', text: data.response }\n  //     ]);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hello World\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c = Homepage;\nexport default Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Homepage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apple/Documents/test/frontend/src/components/HomePage/HomePage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './HomePage.css';\n\nconst Homepage = () => {\n    // const [chatHistory, setChatHistory] = useState([]);\n\n    // const handleChatSubmit = async (event) => {\n    //     event.preventDefault();\n\n    //     const userMessage = event.target.message.value;\n\n    //     const response = await fetch(\"/chat\", {\n    //         method: \"POST\",\n    //         headers: {\n    //             \"Content-Type\": \"application/json\",\n    //         },\n    //         body: JSON.stringify({ message: userMessage })\n    //     });\n\n    //     const data = await response.json();\n\n    //     setChatHistory(prevHistory => [\n    //         ...prevHistory,\n    //         { type: 'user', text: userMessage },\n    //         { type: 'gpt', text: data.response }\n    //     ]);\n    // };\n\n    return (\n        <div>\n            <p>Hello World</p>\n            {/* <form action=\"/\" method=\"post\" enctype=\"multipart/form-data\">\n                Upload a PDF: <input type=\"file\" name=\"pdf\" multiple /><br /><br />\n                <input type=\"submit\" value=\"Upload and Embed\" />\n            </form>\n\n            <br />\n\n            <form action=\"/search\" method=\"post\" id=\"search-form\">\n                Search in PDFs: <input type=\"text\" name=\"query\" />\n                <button type=\"submit\">Search</button>\n            </form>\n\n            <div id=\"chat-box\">\n                <div id=\"chat-history\">\n                    {chatHistory.map((chat, idx) => (\n                        <p key={idx}>{chat.type === 'user' ? 'User' : 'GPT'}: {chat.text}</p>\n                    ))}\n                </div>\n                <form onSubmit={handleChatSubmit} id=\"chat-form\">\n                    <textarea name=\"message\" placeholder=\"Type your message here...\"></textarea>\n                    <button type=\"submit\">Send</button>\n                </form>\n            </div> */}\n        </div>\n    );\n};\n\nexport default Homepage;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB;;EAEA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACID,OAAA;IAAAE,QAAA,eACIF,OAAA;MAAAE,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAwBjB,CAAC;AAEd,CAAC;AAACC,EAAA,GArDIN,QAAQ;AAuDd,eAAeA,QAAQ;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}