{"ast":null,"code":"// CONSTANTS \n\n// ACTION CREATORS\n\nexport const receiveUserHealth = healthData => ({\n  type: RECEIVE_USER_HEALTH,\n  healthData\n});\nexport const receiveWeightByDate = (weight, date) => ({\n  type: RECEIVE_WEIGHT_BY_DATE,\n  weight,\n  date\n});\n\n// SELECTORS\n\nexport const getUserNutritionByDay = state => {\n  const nutritionItems = Object.values(state.users.nutritionItems);\n  const dailyNutrition = nutritionItems.filter(nutritionItem => {\n    const dateConsumed = new moment.utc(nutritionItem.dateConsumed).format(\"YYYY-MM-DD\");\n    return dateConsumed === state.ui.selectedDate;\n  });\n  return dailyNutrition;\n};\nexport const getUserWeightByDate = state => state.users.weightByDate;\n\n// THUNK ACTION CREATORS\n\nexport const updateUser = updatedUser => async dispatch => {\n  try {\n    const res = await jwtFetch(`api/users/${updatedUser._id}`, {\n      method: \"PATCH\",\n      body: JSON.stringify(updatedUser)\n    });\n    const user = await res.json();\n  } catch (err) {\n    const res = await err.json();\n    return dispatch(receiveErrors(res.errors));\n  }\n};\nexport const fetchUserNutritionByDay = selectedDate => async dispatch => {\n  try {\n    const res = await jwtFetch(`/api/nutrition/day?date=${selectedDate}`);\n    const dailyNutrition = await res.json();\n    dispatch(receiveUserNutrition({\n      nutrition: dailyNutrition\n    }));\n  } catch (err) {\n    const res = await err.json();\n    return dispatch(receiveErrors(res.errors));\n  }\n};\nexport const addWeightByDate = (weight, date) => async dispatch => {\n  try {\n    const res = await jwtFetch(`/api/users/weight`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        weight,\n        date\n      })\n    });\n    if (res.ok) {\n      dispatch(receiveWeightByDate(weight, date));\n    } else {\n      const errorData = await res.json();\n      return dispatch(receiveErrors(errorData.errors));\n    }\n  } catch (err) {\n    const res = await err.json();\n    return dispatch(receiveErrors(res.errors));\n  }\n};\n\n// REDUCER\n\nconst initialState = {\n  nutritionItems: {},\n  workouts: [],\n  healthData: {},\n  mealPlan: {},\n  weightByDate: {}\n};\nconst usersReducer = (state = initialState, action) => {\n  var _action$currentUser, _action$currentUser2, _action$currentUser3, _action$currentUser4;\n  const nextState = {\n    ...state\n  };\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n      nextState.nutritionItems = (_action$currentUser = action.currentUser) !== null && _action$currentUser !== void 0 && _action$currentUser.nutritionData ? action.currentUser.nutritionData : {};\n      nextState.healthData = (_action$currentUser2 = action.currentUser) !== null && _action$currentUser2 !== void 0 && _action$currentUser2.healthData ? action.currentUser.healthData : {};\n      nextState.workouts = ((_action$currentUser3 = action.currentUser) === null || _action$currentUser3 === void 0 ? void 0 : _action$currentUser3.workouts) || [];\n      nextState.weightByDate = ((_action$currentUser4 = action.currentUser) === null || _action$currentUser4 === void 0 ? void 0 : _action$currentUser4.weightByDate) || {};\n      return nextState;\n    case RECEIVE_USER_NUTRITION:\n      nextState.nutritionItems = action.userNutrition.nutrition;\n      return nextState;\n    case REMOVE_USER_NUTRITION:\n      return {\n        ...state,\n        nutritionItems: state.nutritionItems.filter(item => item._id !== action.userNutritionId)\n      };\n    case RECEIVE_USER_HEALTH:\n      return {\n        ...state,\n        healthData: action.healthData\n      };\n    case RECEIVE_MEAL_PLAN:\n      return {\n        ...state,\n        mealPlan: action.mealPlan\n      };\n    case RECEIVE_WORKOUT:\n      const newWorkout = action.workout.workouts[action.workout.workouts.length - 1];\n      nextState.workouts.push(newWorkout);\n      return nextState;\n    case RECEIVE_WORKOUTS:\n      nextState.workouts = action.workouts;\n      return nextState;\n    case RECEIVE_WEIGHT_BY_DATE:\n      nextState.weightByDate[action.date] = action.weight;\n      return nextState;\n    case RECEIVE_USER_LOGOUT:\n      return initialState;\n    default:\n      return state;\n  }\n};\nexport default usersReducer;","map":{"version":3,"names":["receiveUserHealth","healthData","type","RECEIVE_USER_HEALTH","receiveWeightByDate","weight","date","RECEIVE_WEIGHT_BY_DATE","getUserNutritionByDay","state","nutritionItems","Object","values","users","dailyNutrition","filter","nutritionItem","dateConsumed","moment","utc","format","ui","selectedDate","getUserWeightByDate","weightByDate","updateUser","updatedUser","dispatch","res","jwtFetch","_id","method","body","JSON","stringify","user","json","err","receiveErrors","errors","fetchUserNutritionByDay","receiveUserNutrition","nutrition","addWeightByDate","ok","errorData","initialState","workouts","mealPlan","usersReducer","action","_action$currentUser","_action$currentUser2","_action$currentUser3","_action$currentUser4","nextState","RECEIVE_CURRENT_USER","currentUser","nutritionData","RECEIVE_USER_NUTRITION","userNutrition","REMOVE_USER_NUTRITION","item","userNutritionId","RECEIVE_MEAL_PLAN","RECEIVE_WORKOUT","newWorkout","workout","length","push","RECEIVE_WORKOUTS","RECEIVE_USER_LOGOUT"],"sources":["/Users/apple/Documents/test/frontend/src/store/users.jsx"],"sourcesContent":["\n// CONSTANTS \n\n\n\n// ACTION CREATORS\n\nexport const receiveUserHealth = healthData => ({\n    type: RECEIVE_USER_HEALTH,\n    healthData\n});\n\nexport const receiveWeightByDate = (weight, date) => ({\n    type: RECEIVE_WEIGHT_BY_DATE,\n    weight,\n    date\n});\n\n// SELECTORS\n\nexport const getUserNutritionByDay = state => {\n    const nutritionItems = Object.values(state.users.nutritionItems);\n\n    const dailyNutrition = nutritionItems.filter(nutritionItem => {\n        const dateConsumed = new moment.utc(nutritionItem.dateConsumed).format(\"YYYY-MM-DD\")\n        return dateConsumed === state.ui.selectedDate;\n    });\n\n    return dailyNutrition;\n}\n\nexport const getUserWeightByDate = state => state.users.weightByDate;\n\n// THUNK ACTION CREATORS\n\nexport const updateUser = updatedUser => async dispatch => {\n    try {  \n        const res = await jwtFetch(`api/users/${updatedUser._id}`, {\n            method: \"PATCH\",\n            body: JSON.stringify(updatedUser)\n        });\n        const user = await res.json();\n\n    } catch(err) {\n        const res = await err.json();\n        return dispatch(receiveErrors(res.errors));\n    }\n};\n\nexport const fetchUserNutritionByDay = selectedDate => async dispatch => {\n    try {\n        const res = await jwtFetch(`/api/nutrition/day?date=${selectedDate}`);\n        const dailyNutrition = await res.json();\n        dispatch(receiveUserNutrition({nutrition: dailyNutrition}));\n    } catch(err) {\n        const res = await err.json();\n        return dispatch(receiveErrors(res.errors));\n    }\n}\n\nexport const addWeightByDate = (weight, date) => async dispatch => {\n    try {\n        const res = await jwtFetch(`/api/users/weight`, {\n            method: \"POST\",\n            body: JSON.stringify({ weight, date })\n        });\n\n\n        if (res.ok) {\n            dispatch(receiveWeightByDate(weight, date));\n        } else {\n            const errorData = await res.json();\n            return dispatch(receiveErrors(errorData.errors));\n        }\n    } catch(err) {\n        const res = await err.json();\n        return dispatch(receiveErrors(res.errors));\n    }\n}\n\n// REDUCER\n\nconst initialState = {\n    nutritionItems: {},\n    workouts: [],\n    healthData: {},\n    mealPlan: {},\n    weightByDate: {}\n};\n\nconst usersReducer = (state = initialState, action) => {\n    const nextState = { ...state };\n    \n    switch (action.type) {\n        case RECEIVE_CURRENT_USER:\n            nextState.nutritionItems = action.currentUser?.nutritionData ? action.currentUser.nutritionData : {}\n            nextState.healthData = action.currentUser?.healthData ? action.currentUser.healthData : {}\n            nextState.workouts = action.currentUser?.workouts || []\n            nextState.weightByDate = action.currentUser?.weightByDate || {}\n            return nextState\n        case RECEIVE_USER_NUTRITION:\n            nextState.nutritionItems = action.userNutrition.nutrition\n            return nextState;\n        case REMOVE_USER_NUTRITION:\n            return {\n                ...state,\n                nutritionItems: state.nutritionItems.filter(item => item._id !== action.userNutritionId)\n            };\n        case RECEIVE_USER_HEALTH:\n            return { ...state, healthData: action.healthData };\n        case RECEIVE_MEAL_PLAN:\n            return { ...state, mealPlan: action.mealPlan };\n        case RECEIVE_WORKOUT:\n            const newWorkout = action.workout.workouts[action.workout.workouts.length - 1];\n            nextState.workouts.push(newWorkout);\n            return nextState\n        case RECEIVE_WORKOUTS:\n            nextState.workouts = action.workouts;\n            return nextState;\n        case RECEIVE_WEIGHT_BY_DATE:\n            nextState.weightByDate[action.date] = action.weight;\n            return nextState;\n        case RECEIVE_USER_LOGOUT:\n            return initialState;\n        default:\n            return state;\n    }\n};\n\nexport default usersReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}